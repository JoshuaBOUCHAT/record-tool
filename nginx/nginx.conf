worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # Gestion du header Connection pour WebSocket
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  upstream backend {
    server backend:8000;
  }

  upstream frontend {
    server frontend:3000;
  }

  server {
    listen 80;
    # redirection HTTP vers HTTPS
    return 301 https://$host$request_uri;
  }


  server {
    listen 443 ssl;

    ssl_certificate     /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    location /api/ {
      proxy_pass http://backend/;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;

      # Headers WebSocket importants
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_cache_bypass $http_upgrade;
    }

    location / {
      proxy_pass http://frontend/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
    }
  }
}
